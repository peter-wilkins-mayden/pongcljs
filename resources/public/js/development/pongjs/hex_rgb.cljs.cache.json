["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$pongjs.hex-rgb","~:imports",null,"~:requires",["^ ","~$q","~$quil.core","^;","^;","~$h","~$pongjs.hex-rgb-conversion","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$opaque",["^ ","~:meta",["^ ","~:file","/home/richard/repos/clojure/Clojure-Study-Group/week-13-quil/pongcljs/src/cljs/pongcljs/hex_rgb.cljs","~:line",9,"~:column",16,"~:end-line",9,"~:end-column",22,"~:private",true],"^G",true,"^7","~$pongjs.hex-rgb/opaque","^B","src/cljs/pongcljs/hex_rgb.cljs","^F",22,"^D",1,"^C",9,"^E",9,"~:tag","~$number"],"~$call",["^ ","~:protocol-inline",null,"^A",["^ ","^B","/home/richard/repos/clojure/Clojure-Study-Group/week-13-quil/pongcljs/src/cljs/pongcljs/hex_rgb.cljs","^C",13,"^D",8,"^E",13,"^F",12,"^G",true,"~:arglists",["~#list",["~$quote",["^N",[["~$f","~$s","~$alpha"]]]]],"~:doc","helper function to call a quil function. All the calling functions needed to transform hex to rgb, therefore we can do it all in one go here.\n   A lot of quil color functions follow the pattern of (Function Red Green Blue Alpha)"],"^G",true,"^7","~$pongjs.hex-rgb/call","^B","src/cljs/pongcljs/hex_rgb.cljs","^F",12,"~:method-params",["^N",[["~$f","~$s","^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^D",1,"~:variadic?",false,"^C",13,"~:ret-tag","~$any","^E",13,"~:max-fixed-arity",3,"~:fn-var",true,"^M",["^N",["^O",["^N",[["~$f","~$s","^P"]]]]],"^Q","helper function to call a quil function. All the calling functions needed to transform hex to rgb, therefore we can do it all in one go here.\n   A lot of quil color functions follow the pattern of (Function Red Green Blue Alpha)"],"~$fill",["^ ","^L",null,"^A",["^ ","^B","/home/richard/repos/clojure/Clojure-Study-Group/week-13-quil/pongcljs/src/cljs/pongcljs/hex_rgb.cljs","^C",21,"^D",7,"^E",21,"^F",11,"^M",["^N",["^O",["^N",[["~$s"],["~$s","^P"]]]]],"^Q","Set css hex color to fill shapes. Same as http://quil.info/api/color/setting#fill, but using hex.","~:top-fn",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]]],"^7","~$pongjs.hex-rgb/fill","^B","src/cljs/pongcljs/hex_rgb.cljs","^F",11,"^10",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]],"^S",["^N",[["~$s"],["~$s","^P"]]],"^T",null,"^U",["^N",[null,null]],"^D",1,"^V",false,"^C",21,"^E",21,"^Y",2,"^Z",true,"^M",["^N",[["~$s"],["~$s","^P"]]],"^Q","Set css hex color to fill shapes. Same as http://quil.info/api/color/setting#fill, but using hex."],"~$stroke",["^ ","^L",null,"^A",["^ ","^B","/home/richard/repos/clojure/Clojure-Study-Group/week-13-quil/pongcljs/src/cljs/pongcljs/hex_rgb.cljs","^C",26,"^D",7,"^E",26,"^F",13,"^M",["^N",["^O",["^N",[["~$s"],["~$s","^P"]]]]],"^Q","Set css hex color to stroke. Same as http://quil.info/api/color/setting#stroke, but using hex.","^10",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]]],"^7","~$pongjs.hex-rgb/stroke","^B","src/cljs/pongcljs/hex_rgb.cljs","^F",13,"^10",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]],"^S",["^N",[["~$s"],["~$s","^P"]]],"^T",null,"^U",["^N",[null,null]],"^D",1,"^V",false,"^C",26,"^E",26,"^Y",2,"^Z",true,"^M",["^N",[["~$s"],["~$s","^P"]]],"^Q","Set css hex color to stroke. Same as http://quil.info/api/color/setting#stroke, but using hex."],"~$background",["^ ","^L",null,"^A",["^ ","^B","/home/richard/repos/clojure/Clojure-Study-Group/week-13-quil/pongcljs/src/cljs/pongcljs/hex_rgb.cljs","^C",31,"^D",7,"^E",31,"^F",17,"^M",["^N",["^O",["^N",[["~$s"],["~$s","^P"]]]]],"^Q","Set css hex color to the background. Same as http://quil.info/api/color/setting#background but using hex.","^10",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]]],"^7","~$pongjs.hex-rgb/background","^B","src/cljs/pongcljs/hex_rgb.cljs","^F",17,"^10",["^ ","^V",false,"^Y",2,"^S",["^N",[["~$s"],["~$s","^P"]]],"^M",["^N",[["~$s"],["~$s","^P"]]],"^U",["^N",[null,null]]],"^S",["^N",[["~$s"],["~$s","^P"]]],"^T",null,"^U",["^N",[null,null]],"^D",1,"^V",false,"^C",31,"^E",31,"^Y",2,"^Z",true,"^M",["^N",[["~$s"],["~$s","^P"]]],"^Q","Set css hex color to the background. Same as http://quil.info/api/color/setting#background but using hex."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$q","^;","^;","^;"],"^Q","Helper functions for turning css-hex codes into rgb and for drawing them using quil.\n  Note: Processing allows this, but from my investigations, Quil does not. https://processing.org/reference/stroke_.html"]